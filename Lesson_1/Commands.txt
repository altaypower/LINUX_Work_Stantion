Пакетный менеджер Apt или Advanced Package Tool
Поддерживает все необходимые функции, вы можете устанавливать и удалять пакеты, обновлять то, что было уже установлено, искать пакеты, устанавливать их из
 файла или загружать без установки. При этом все зависимости будут разрешаться автоматически.
$ apt опции команда параметры_команды
Опции указывают общее поведение утилиты, команда - действие, которое надо выполнить, а в параметрах команды обычно передается имя пакета, с которым следует
 работать, например, установить или удалить. Вот основные опции утилиты:
-v, --version - выводит версию утилиты;
-h, --help - выводит справку по использованию утилиты;
-y, --yes - автоматически отвечать "да" на все возникающие вопросы;
--assume-no - автоматически отвечать "нет" на все возникающие вопросы;
-d, --download-only - только скачать пакеты и больше ничего не делать;
-f, --fix-broken - исправить недостающие зависимости;
--no-download - ничего не загружать, использовать только пакеты из кэша;
-s, --simulate - режим симуляции, никакие операции не выполняются, только выводится информация на экран;
--allow-unauthenticated - позволяет установить пакеты, из репозиториев, для которых нет GPG подписи;
--no-install-recommends - не устанавливать рекомендованные пакеты, по умолчанию будут установлены;
-m, --ignore-missing - игнорировать пакеты, которые существует;
-q, --quiet - выводить минимум информации, не показывать прогресс бар;
-V, --verbose-versions - показывать полные версии обновленных пакетов;
--only-upgrade - не устанавливать новые пакеты, только обновлять;
--allow-downgrades - разрешить откатывать версию пакетов;
--reinstall - переустановить пакет если он уже установлен;

А теперь давайте пройдёмся по командам apt, которые вы можете использовать:
install - установить пакет;
remove - удалить пакет, конфигурационные файлы, которые были изменены в вашей системе удалены не будут;
purge - полностью удалить пакет, вместе со всеми его конфигурационными файлами;
autoremove - очистить ненужные пакеты;
autoclean - очистить кэш пакетов;
update - обновить списки пакетов из репозиториев;
upgrade - обновить версию пакета до последней, если пакет не указан будут обновлены все пакеты;
full-upgrade - полное обновление системы, включая удаление несовместимых или больше ненужных пакетов;
list - список установленных пакетов;
search - поиск пакетов;
show - посмотреть информацию о пакете;
download - скачать пакет в текущую папку;
edit-sources - открыть с настройками репозиториев в текстовом редакторе.
source - скачать исходный код пакета в текущую папку;
build-dep - установить зависимости необходимые для сборки выбранного пакета;


КОМАНДА CD
$ cd опции папка_назначения
Опций всего две, это -P и -L. Они влияют на то, как будут обрабатываться символы возврата в предыдущую директорию и символические ссылки:
-P - позволяет следовать по символическим ссылкам перед тем, как будут обработаны все переходы "..";
-L - переходит по символическим ссылкам только после того, как были обработаны "..";
-e - если папку, в которую нужно перейти не удалось найти - выдает ошибку.
Дальше нужно указать директорию, в которую следует перейти. Если этого не сделать, а вызвать cd без параметров, то рабочей папкой будет выбран ваш
 домашний каталог.
Команда hostname
Команда hostname предназначена для вызова одноименной утилиты, осуществляющей вывод и изменение имени узла, ассоциированного с системой. Имя узла является
 частью доменного имени системы, предназначенного для ее уникальной идентификации в рамках локальной сети без необходимости использования IP-адресов.
Базовый синтаксис команды выглядит следующим образом:
$ hostname [параметры] [новое-имя-узла]
Утилита позволяет вывести список всех IP-адресов системы с помощью параметра -I, вывести список всех доменных имен системы с помощью параметра -A, вывести
 основной IP-адрес системы с помощью параметра -i, вывести основное доменное имя системы с помощью параметра -f, а также вывести и задать имя узла.
Установка имени узла осуществляется на временной основе, до следующей перезагрузки системы. Для того, чтобы изменить имя узла системы на постоянной основе,
 следует отредактировать содержимое системных файлов конфигурации /etc/hostname и /etc/hosts.

УТИЛИТА IP
ip [опции] объект команда [параметры]
Поддерживаются такие опции для настройки сети в lInux:
-v - только вывод информации об утилите и ее версии
-s - включает вывод статистической информации
-f - позволяет указать протокол, с которым нужно работать, если протокол не указан, то берется на основе параметров команды. Опция f должна принимать 
одно из значений: bridge, dnet, inet, inet6, ipx или link. По умолчанию используется inet, link - означает отсутствие протокола.
-o - выводить каждую запись с новой строки
-r - выполнять резолвинг и выводить символические имена хостов
Все остальные опции - ярлыки опции -f:
-4 - ярлык для -f inet
-6 - -f inet6
-B - -f bridge
-0 - -f link
Cамые важные объекты.
address - сетевой адрес на устройстве
link- физическое сетевое устройство
monitor - мониторинг состояния устройств
neigh - ARP
route - управление маршрутизацией
rule - правила маршрутизации
tunnel - настройка туннелирования

Доступные команды, с помощью которых может быть выполнена настройка сети linux. Вот они: add, change, del или delete, flush, get, list или show, monitor,
 replace, restore, save, set, и update. Если команда не задана, по умолчанию используется show (показать).

Параметры зависят от объекта и указанной команды. Рассмотрим самые основные:
dev имя_устройства - сетевое устройство;
up - включить;
down - выключить;
lladdr - MAC - адрес;
initcwnd - размер окна перегрузки TCP при инициализации;
window - размер окна TCP;
cwnd - размер окна перегрузки TCP;
type - тип;
via - подключиться к роутеру;
default - маршрут по умолчанию;
blackhole - маршрут "черная дыра" - отбрасывать пакеты и не посылать ICMP сообщения о недоступности;
prohibit - маршрут "запрета" - отбрасывать пакеты и возвращать ICMP сообщения о запрете доступа;
unreachable - маршрут "недостижимый" - отбрасывать пакеты и посылать ICMP пакеты о недостижимости узла.
IP LINK
Утилита ip в Linux с параметром linnk позволяет управлять состоянием сетевых интерфейсов и просматривать информацию о них.
ip link show - отобразить состояние всех сетевых интерфейсов
ip l sh - то же самое
ip ll - то же самое
ip l - то же самое
ip link show eth0 - отобразить состояние eth0
ip link list up - отобразить статус всех включенных интерфейсов
ip link set eth1 up - включить eth1
ip link set eth1 down выключить eth1

IP NEIGBOUR
Объект neigbour используется для управления ARP таблицами.
ip neigh show - показать все записи ARP
ip n sh - то же самое
ip n l - то же самое
ip n - то же самое
ip neigh show dev eth0 - посмотреть все ARP записи для eth0
ip neigh flush - удалить все ARP записи
ip ne fl dev eth0 - удалить все ARP записи для eth0
ip nei add 1.1.1.13 lladdr AA:BB:CC:DD:EE:FF dev eth0 - добавить ARP запись для определенного IP адреса.
ip n del 1.1.1.13 dev eth0 - удалить все записи для указанного адреса

IP ADDRESS
Важно заметить, что вторичные ip адреса не используются в качестве исходящих адресов для отправки пакетов.
ip address show - показать все ip адреса и их интерфейсы
ip a sh - то же самое
ip a list - то же самое
ip a - то же самое
ip a l permanent - отобразить только статические ip адреса
ip a l dynamic - отобразить только динамические ip адреса
ip addr add 1.1.1.13/24 dev eth0 - установить ip адрес для интерфейса eth0
ip addr del 1.1.1.13/24 dev eth0 - удалить ip адрес интерфейса eth0
ip add flush dev eth0 - удалить все ip адреса интерфейса eth0

IP ROUTE
Утилита ip в Linux позволяет не только устанавливать ip адреса, но и настраивать маршруты. По умолчанию в Linux используется таблица маршрутизации 254,
 вы также можете иметь дело с таблицей 255, которую не следует изменять, а также 253, в которой хранятся маршруты по умолчанию.
ip r sh показать все маршруты в таблице маршрутизации
ip route show table nnn - отобразить все маршруты из таблицы 255
ip route get 10.10.20.0/24 - отобразить маршрут к этой сети
ip route get 10.10.20.0/24 from 192.168.12.9 - отобразить маршрут к этой сети от указного интерфейса.
ip route add 10.10.20.0/24 via 192.168.50.100 - создать маршрут
ip route delete 10.10.20.0/24 - удалить маршрут.
ip route del 10.10.20.0/24 via 192.168.50.100 - удалить маршрут.
ip route add default via 192.168.50.100 - создать маршрут по умолчанию.
ip route add 10.10.20.0/24 dev eth0 - создать маршрут к указной сети.
ip route add table nnn 10.10.20.0/24 dev eth0 - создать маршрут в специальной таблице роутинга.
ip route add blackhole 10.10.20.0/24 dev eth0 - создать blackhole маршрут.
ip route add unreachable 10.10.20.0/24 dev eth0 - создать unreachable маршрут.

КОМАНДА LS
Dы набираете саму команду, а после нее путь к папке, содержимое которой хотите посмотреть. Если вы запустите команду без пути, то она выдаст содержимое
 текущего каталога:
$ ls опции /путь/к/папке
Опции команды указывают как именно и в каком виде нужно выводить информацию на экран, а путь, это та папка, которую нужно отобразить.
 Рассмотрим основные опции утилиты:
?	-a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;
?	-A - не отображать ссылку на текущую папку и корневую папку . и ..;
?	--author - выводить создателя файла в режиме подробного списка;
?	-b - выводить Escape последовательности вместо непечатаемых символов;
?	--block-size - выводить размер каталога или файла в определенной единице измерения, например, мегабайтах, гигабайтах или килобайтах;
?	-B - не выводить резервные копии, их имена начинаются с ~;
?	-c - сортировать файлы по времени модификации или создания, сначала будут выведены новые файлы;
?	-C - выводить колонками;
?	--color - включить цветной режим вывода, автоматически активирована во многих дистрибутивах;
?	-d - выводить только директории, без их содержимого, полезно при рекурсивном выводе;
?	-D - использовать режим вывода, совместимый с Emacs;
?	-f - не сортировать;
?	-F - показывать тип объекта, к каждому объекту будет добавлен один из специализированных символов */=>@|;
?	--full-time - показывать подробную информацию, плюс вся информация о времени в формате ISO;
?	-g - показывать подробную информацию, но кроме владельца файла;
?	--group-directories-first - сначала отображать директории, а уже потом файлы;
?	-G - не выводить имена групп;
?	-h - выводить размеры папок в удобном для чтения формате;
?	-H - открывать символические ссылки при рекурсивном использовании;
?	--hide - не отображать файлы, которые начинаются с указанного символа;
?	-i - отображать номер индекса inode, в которой хранится этот файл;
?	-l - выводить подробный список, в котором будет отображаться владелец, группа, дата создания, размер и другие параметры;
?	-L - для символических ссылок отображать информацию о файле, на который они ссылаются;
?	-m - разделять элементы списка запятой;
?	-n - выводить UID и GID вместо имени и группы пользователя;
?	-N - выводить имена как есть, не обрабатывать контролирующие последовательности;
?	-Q - брать имена папок и файлов в кавычки;
?	-r - обратный порядок сортировки;
?	-R - рекурсивно отображать содержимое поддиректорий;
?	-s - выводить размер файла в блоках;
?	-S - сортировать по размеру, сначала большие;
?	-t - сортировать по времени последней модификации;
?	-u - сортировать по времени последнего доступа;
?	-U - не сортировать;
?	-X - сортировать по алфавиту;
?	-Z - отображать информацию о расширениях SELinux;
?	-1 - отображать один файл на одну строку.

Команда man
	
$man [option(s)] keyword(s)
man чаще всего используется без каких-либо опций[option(s)] и имеет только одно ключевое слово(keyword). Ключевое слово — это точное имя команды 
или другого элемента, для которого требуется информация.
Как устроен справочник в Linux?
Чтобы хранить всю информацию о возможностях системы было удобно, ее группируют по различным тематикам, данные в них могут отличаться друг от друга, 
все зависит от того, какой дистрибутив у вас 
установлен. Также возможно деление информации в мануалах на подразделы. Ниже вы сможете узнать, где можно найти всю системную информацию в Linux:
?	Под цифрой 1 скрываются программы для обычных пользователей;
?	Под цифрой 2 можно найти данные о кодах ошибок основного ядра и описание вызовов системы;
?	Под цифрой 3 можно увидеть возможности библиотек системы;
?	Под цифрой 4 в Linux можно увидеть описание сетевых протоколов и драйверов устройства;
?	Пол цифрой 5 в Linux находятся описания файлов, которые поддерживаются системой;
?	Под цифрой 6 в Linux находятся данные о примерах игр и программ в системе, HP-UX такой информации не имеет;
?	Под цифрой 7 в Linux находится различная документация;
?	Под цифрой 8 в Linux описаны возможности для системных администраторов и команды для них;
?	Под цифрой 9 описаны системные ядра и внутренние интерфейсы.
Изначально система настроена так, что указывая раздел с помощью man, почти всегда пользователь найдет информацию быстро и может показаться, 
что делить мануал на тематики бессмысленно, однако это не так. Ведь некоторые команды в UNIX-системах могут использоваться сразу в 2 местах в зависимости
 от контекста. Пример:
?	Есть фраза «passwd» и она имеет 2 значения, как команда и как файл системы;
Информацию о справочных данных вышеприведенные системы содержат в себе в разделах 1, 4 и 5.
Нельзя забывать и про то, что многие дистрибутивы в своих последних версиях переносят команды из раздела 8 в Linux в группу к остальным системным командам.
 А освободившийся раздел используется как резерв для информации о будущих обновлениях. Помимо этого все меньше информации становится в разделе 6.
Как читать интерактивную справку?
Чтобы прочитать нужную вам информацию в терминале, необходимо ввести в него поисковой запрос, который выглядит так:
$man [-опции] номер раздела номер заголовка
Чтобы пользователь смог прочитать информацию, man использует такие утилиты как less и more, они дают возможность читать мануал с комфортом, помимо этого
 используются и другие возможности для вывода текста. Чтобы мануал был разбит на страницы, утилита использует переменную среды PAGER.
Последним в запрос вписывается заголовок, им может быть наименование утилиты, файла или самого компьютера, другими словами все, о чем нужно найти 
информацию. Для поиска вначале используются 
тематики под номерами 1, 6 и 8, именно они содержат данные о командах, если в них ничего не найдено, то проверяются остальные тематики.
Основные опции:
-a - показать подряд все справочные страницы.
-f - выдает разделы, где присутствует команда.
-k - искать упоминание в тематиках

man [-опции] номер раздела номер заголовка

Команда POWEROFF
Эта  команда  не выполняет никаких подготовительных действий перед выключением, а просто отключает питание:
$sudo poweroff

КОМАНДА PWD
Команда pwd - это очень простая утилита, которая позволяет вывести в терминал путь к текущей папке. 
$ pwd опции
Вот основные опции, которые вы можете использовать для настройки вывода утилиты:
?	-L, --logical - брать директорию из переменной окружения, даже если она содержит символические ссылки;
?	-P - отбрасывать все символические ссылки;
?	--help - отобразить справку по утилите;
?	--version - отобразить версию утилиты.

Команда reboot
Reboot — это самая популярная команда перезагрузки linux:
$ reboot

КОМАНДА SUDO
Позволяет  запускать программы от имени других пользователей, а также от имени суперпользователя.
$ sudo опции программа параметры
ОПЦИИ SUDO
-A или --askpass - по умолчанию sudo спрашивает пароль пользователя в терминале. Если задана эта опция, утилита попробует использовать графическую утилиту
 для запроса пароля.
-b или --background - запускает переданную программу в фоновом режиме;
-C или --close-from - опции нужно передать число больше трёх. Она позволяет закрыть для программы все файловые дескрипторы, кроме стандартного ввода и
 вывода;
-E или --preserve-env - позволяет передать переменные окружения текущего пользователя выполняемой программе. Также можно передать этой опции список 
переменных, которые нужно разрешить;
-e или --edit - позволяет редактировать файл вместо запуска команды. Файл копируется во временный каталог, редактируется с помощью редактора, 
установленного в системе по умолчанию, и если были изменения, записывается обратно с теми самыми правами;
-g - запустить команду с указанной группой вместо группы пользователя, от имени которого запускается программа;
-h - выполнить команду от имени другого хоста;
-H или --set-home - установить домашний каталог;
-i или --login - позволяет авторизоваться в консоли от имени другого пользователя. Будет выбран его домашний каталог, а также загружены все переменные
 окружения;
-k - по умолчанию, sudo сохраняет пароль и некоторое время после выполнения команды, вы можете выполнить ещё раз, без ввода пароля. Эта опция отключает 
такую возможность;
-l или --list - позволяет вывести список доступных команд для удалённых пользователей;
-n или --non-interactive - не интерактивный режим, если будет необходимо ввести пароль, программа выдаст ошибку;
-p или --prompt - использовать своё приглашение для ввода пароля;
-r или --role - выполнить программу с контекстом SELinux, у которого есть указанная роль;
-S - использовать стандартный поток ошибок для запроса пароля;
-s или --shell - позволяет запустить указанный командный интерпретатор;
-U или --User - вместе с опцией -l позволяет посмотреть привилегии для пользователя;

-T или --timeout - позволяет установить время выполнения команды, если время истечёт раньше, чем завершится команда, то она будет завершена принудительно;
-u - позволяет указать, от имени какого пользователя нужно выполнять программу;
-V - выводит версию утилиты;
-- - означает, что следующие опции обрабатывать не нужно.

С помощью sudo вы также можете авторизоваться от имени другого пользователя. Для этого используйте опцию -i:
$ sudo –i
По умолчанию вы будете авторизованы как суперпользователь. Ещё здесь можно указать пользователя, от имени которого вы хотите авторизоваться:
$ sudo -i -u sergiy


Команда Whoami
$ whoami [OPTION]
Чтобы отобразить имя пользователя, который в данный момент вошел в систему, вызовите команду без каких-либо параметров:
Команда whoami принимает только две опции:
-h, –help- Показать справку и выйти.
-V, –version- Показывает информацию о версии.



